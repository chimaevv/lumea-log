// schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         String    @id @default(uuid())
  username   String    @unique
  email      String    @unique
  password   String
  profilePic String?   // Optional profile picture URL
  reviews    Review[]
  // Relations for following/followers via the Follow join table:
  followers  Follow[]  @relation("followers")
  following  Follow[]  @relation("following")
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Follow {
  id          String @id @default(uuid())
  // The user who is following someone
  follower    User   @relation("following", fields: [followerId], references: [id])
  followerId  String
  // The user being followed
  following   User   @relation("followers", fields: [followingId], references: [id])
  followingId String
}

model Drama {
  id          String    @id @default(uuid())
  title       String
  description String?   // Optional description
  posterUrl   String?   // Optional URL to the drama poster image
  reviews     Review[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Review {
  id        String   @id @default(uuid())
  // Relation: which user wrote this review
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  // Relation: which drama is being reviewed
  drama     Drama    @relation(fields: [dramaId], references: [id])
  dramaId   String
  rating    Int      // 1 to 5 stars
  comment   String?  // Optional text review
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
